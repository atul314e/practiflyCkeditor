"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var QuestionCircleOutlined_1 = tslib_1.__importDefault(require("@ant-design/icons/QuestionCircleOutlined"));
var tooltip_1 = tslib_1.__importDefault(require("antd/lib/tooltip"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var react_1 = tslib_1.__importStar(require("react"));
var uniforms_1 = require("uniforms");
var ListAddField_1 = tslib_1.__importDefault(require("./ListAddField"));
var ListItemField_1 = tslib_1.__importDefault(require("./ListItemField"));
var defaultStyle = {
    marginBottom: '5px',
    marginTop: '5px',
    padding: '10px',
};
var errorStyle = { borderColor: 'rgb(255, 85, 0)' };
function List(_a) {
    var _b = _a.children, children = _b === void 0 ? react_1.default.createElement(ListItemField_1.default, { name: "$" }) : _b, className = _a.className, error = _a.error, errorMessage = _a.errorMessage, info = _a.info, initialCount = _a.initialCount, itemProps = _a.itemProps, label = _a.label, labelCol = _a.labelCol, showInlineError = _a.showInlineError, _c = _a.style, style = _c === void 0 ? defaultStyle : _c, value = _a.value, wrapperCol = _a.wrapperCol, props = tslib_1.__rest(_a, ["children", "className", "error", "errorMessage", "info", "initialCount", "itemProps", "label", "labelCol", "showInlineError", "style", "value", "wrapperCol"]);
    var wrapperStyle = error
        ? style
            ? tslib_1.__assign(tslib_1.__assign({}, errorStyle), style) : errorStyle
        : style;
    return (react_1.default.createElement("div", tslib_1.__assign({}, uniforms_1.filterDOMProps(props), { style: wrapperStyle, className: classnames_1.default([className, 'ant-list', 'ant-list-bordered']) }),
        !!label && (react_1.default.createElement("div", null,
            label,
            !!info && (react_1.default.createElement("span", null,
                "\u00A0",
                react_1.default.createElement(tooltip_1.default, { title: info },
                    react_1.default.createElement(QuestionCircleOutlined_1.default, null)))))),
        !!(error && showInlineError) && react_1.default.createElement("div", null, errorMessage), value === null || value === void 0 ? void 0 :
        value.map(function (item, itemIndex) {
            return react_1.Children.map(children, function (child, childIndex) {
                var _a;
                return react_1.isValidElement(child)
                    ? react_1.cloneElement(child, tslib_1.__assign({ key: itemIndex + "-" + childIndex, name: (_a = child.props.name) === null || _a === void 0 ? void 0 : _a.replace('$', '' + itemIndex), labelCol: labelCol,
                        wrapperCol: wrapperCol }, itemProps))
                    : child;
            });
        }),
        react_1.default.createElement(ListAddField_1.default, { name: "$", initialCount: initialCount })));
}
exports.default = uniforms_1.connectField(List);
