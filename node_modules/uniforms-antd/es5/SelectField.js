"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Group_1 = tslib_1.__importDefault(require("antd/lib/checkbox/Group"));
var group_1 = tslib_1.__importDefault(require("antd/lib/radio/group"));
var select_1 = tslib_1.__importDefault(require("antd/lib/select"));
var react_1 = tslib_1.__importDefault(require("react"));
var uniforms_1 = require("uniforms");
var wrapField_1 = tslib_1.__importDefault(require("./wrapField"));
function Select(props) {
    var _a;
    var Group = props.fieldType === Array ? Group_1.default : group_1.default;
    return wrapField_1.default(props, props.checkboxes ? (
    // @ts-expect-error: Incorrect `value` type.
    react_1.default.createElement(Group, tslib_1.__assign({ disabled: props.disabled, name: props.name, onChange: function (eventOrValue) {
            if (!props.readOnly) {
                props.onChange(
                // FIXME: Argument type depends on `props.fieldType`.
                props.fieldType === Array
                    ? eventOrValue
                    : eventOrValue.target.value);
            }
        }, options: props.allowedValues.map(function (value) {
            var _a;
            return ({
                disabled: (_a = props.disableItem) === null || _a === void 0 ? void 0 : _a.call(props, value),
                label: props.transform ? props.transform(value) : value,
                value: value,
            });
        }), value: props.value }, uniforms_1.filterDOMProps(props)))) : (react_1.default.createElement(select_1.default, tslib_1.__assign({ allowClear: !props.required, disabled: props.disabled, mode: props.fieldType === Array ? 'multiple' : undefined, name: props.name, onChange: function (value) {
            if (!props.readOnly) {
                props.onChange(value);
            }
        }, placeholder: props.placeholder, 
        // @ts-expect-error: Incorrect `inputRef` type.
        ref: props.inputRef, value: props.fieldType === Array
            ? Array.isArray(props.value)
                ? props.value.filter(function (value) { return value !== undefined; })
                : []
            : props.value }, uniforms_1.filterDOMProps(props)), (_a = props.allowedValues) === null || _a === void 0 ? void 0 : _a.map(function (value) {
        var _a;
        return (react_1.default.createElement(select_1.default.Option, { disabled: (_a = props.disableItem) === null || _a === void 0 ? void 0 : _a.call(props, value), key: value, value: value }, props.transform ? props.transform(value) : value));
    }))));
}
exports.default = uniforms_1.connectField(Select, { kind: 'leaf' });
