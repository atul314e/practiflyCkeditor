"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _stuff = require("../../utils/stuff");

var _excluded = ["factory"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var _default = function _default(_ref) {
  var delta = _ref.delta,
      isFuncArg = _ref.isFuncArg,
      valueSrc = _ref.valueSrc,
      immValue = _ref.value,
      immValueError = _ref.valueError,
      isSpecialRange = _ref.isSpecialRange,
      fieldDefinition = _ref.fieldDefinition,
      widget = _ref.widget,
      widgetDefinition = _ref.widgetDefinition,
      widgetValueLabel = _ref.widgetValueLabel,
      valueLabels = _ref.valueLabels,
      textSeparators = _ref.textSeparators,
      setValueHandler = _ref.setValueHandler,
      config = _ref.config,
      field = _ref.field,
      operator = _ref.operator,
      readonly = _ref.readonly,
      parentField = _ref.parentField,
      parentFuncs = _ref.parentFuncs;

  var widgetFactory = widgetDefinition.factory,
      fieldWidgetProps = _objectWithoutProperties(widgetDefinition, _excluded);

  var isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == "const";
  var defaultValue = fieldDefinition.defaultValue;

  if (!widgetFactory) {
    return "?";
  }

  var value = isSpecialRange ? [immValue.get(0), immValue.get(1)] : immValue ? immValue.get(delta) : undefined;
  var valueError = immValueError && (isSpecialRange ? [immValueError.get(0), immValueError.get(1)] : immValueError.get(delta)) || null;
  if (isSpecialRange && value[0] === undefined && value[1] === undefined) value = undefined;

  var _ref2 = fieldDefinition || {},
      fieldSettings = _ref2.fieldSettings;

  var widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {
    config: config,
    field: field,
    parentField: parentField,
    parentFuncs: parentFuncs,
    fieldDefinition: fieldDefinition,
    operator: operator,
    delta: delta,
    isSpecialRange: isSpecialRange,
    isFuncArg: isFuncArg,
    value: value,
    valueError: valueError,
    label: widgetValueLabel.label,
    placeholder: widgetValueLabel.placeholder,
    placeholders: valueLabels ? valueLabels.placeholder : null,
    textSeparators: textSeparators,
    setValue: setValueHandler,
    readonly: readonly
  });

  if (widget == "field") {//
  }

  if (isConst && defaultValue) {
    if (typeof defaultValue == "boolean") {
      return defaultValue ? widgetProps.labelYes || "YES" : widgetProps.labelNo || "NO";
    } else if (fieldSettings.listValues) {
      if (Array.isArray(defaultValue)) return defaultValue.map(function (v) {
        return (0, _stuff.getTitleInListValues)(fieldSettings.listValues, v) || v;
      }).join(", ");else return (0, _stuff.getTitleInListValues)(fieldSettings.listValues, defaultValue) || defaultValue;
    }

    return "" + defaultValue;
  }

  return widgetFactory(widgetProps);
};

exports["default"] = _default;