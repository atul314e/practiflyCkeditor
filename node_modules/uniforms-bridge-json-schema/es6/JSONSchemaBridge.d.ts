import { Bridge } from 'uniforms';
export default class JSONSchemaBridge extends Bridge {
    schema: Record<string, any>;
    validator: (model: Record<string, any>) => any;
    _compiledSchema: Record<string, any>;
    constructor(schema: Record<string, any>, validator: (model: Record<string, any>) => any);
    getError(name: string, error: any): any;
    getErrorMessage(name: string, error: any): any;
    getErrorMessages(error: any): any[];
    getField(name: string): Record<string, any>;
    getInitialValue(name: string, props?: Record<string, any>): any;
    getProps(name: string, props?: Record<string, any>): {
        [x: string]: any;
        [x: number]: any;
    };
    getSubfields(name?: string): string[];
    getType(name: string): any;
    getValidator(): (model: Record<string, any>) => any;
}
