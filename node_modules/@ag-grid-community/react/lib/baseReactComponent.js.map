{"version":3,"sources":["baseReactComponent.ts"],"names":[],"mappings":";;;AAEA;IAAA;IA4BA,CAAC;IA3BG,sCAAS,GAAT,UAAU,IAAY;QAClB,IAAI,0BAA0B,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACtE,IAAI,0BAA0B,IAAI,IAAI,EAAE;YACpC,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,0BAA0B,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;IACpD,CAAC;IAED,uCAAU,GAAV,UAAW,IAAY,EAAE,IAAgB;QAAzC,iBAWC;QAVG,IAAI,0BAA0B,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;QAEtE,0EAA0E;QAC1E,IAAI,0BAA0B,IAAI,IAAI,EAAE;YACpC,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAA3B,CAA2B,EAAE,GAAG,CAAC,CAAC;SAC7D;aAAM;YACH,IAAI,MAAM,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,MAAM,IAAI,IAAI;gBAAE,OAAO;YAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;SACzD;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,IAAY,EAAE,QAAkB;QACrC,IAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;IACnC,CAAC;IAIL,yBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BqB,gDAAkB","file":"baseReactComponent.js","sourcesContent":["import {IComponent, WrapableInterface} from '@ag-grid-community/core';\n\nexport abstract class BaseReactComponent implements IComponent<any>, WrapableInterface {\n    hasMethod(name: string): boolean {\n        let frameworkComponentInstance = this.getFrameworkComponentInstance();\n        if (frameworkComponentInstance == null) {\n            return false;\n        }\n        return frameworkComponentInstance[name] != null;\n    }\n\n    callMethod(name: string, args: IArguments): void {\n        let frameworkComponentInstance = this.getFrameworkComponentInstance();\n\n        // this should never happen now that AgGridReact.waitForInstance is in use\n        if (frameworkComponentInstance == null) {\n            window.setTimeout(() => this.callMethod(name, args), 100);\n        } else {\n            let method = this.getFrameworkComponentInstance()[name];\n            if (method == null) return;\n            return method.apply(frameworkComponentInstance, args);\n        }\n    }\n\n    addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n    abstract getGui(): HTMLElement;\n    abstract getFrameworkComponentInstance(): any;\n}\n"]}